name: prerelease

on:
  push:
    tags:
      - "v*.*.*-*"

env:
  GO_VERSION: "1.22.1"
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  IMAGE_NAME: quay.io/${{ secrets.REGISTRY_USERNAME }}/terraform-docs

jobs:
  prerelease:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        if: env.REGISTRY_USERNAME != ''
        with:
          version: latest
          args: release --rm-dist --skip-publish --skip-sign

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/terraform-docs-v*
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.COMMITTER_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: prerelease
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            suffix: -amd64
          - platform: linux/arm64
            suffix: -arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v3
        if: env.REGISTRY_USERNAME != ''
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ env.IMAGE_NAME }}:${{ github.ref_name }}${{ matrix.suffix }}
          push: true

  manifest:
    runs-on: ubuntu-latest
    needs: docker
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Create and push Docker manifest
        run: |
          docker manifest create ${{ env.IMAGE_NAME }}:${{ github.ref_name }} ${{ env.IMAGE_NAME }}:${{ github.ref_name }}-amd64 ${{ env.IMAGE_NAME }}:${{ github.ref_name }}-arm64
          docker manifest push ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
